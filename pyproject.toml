[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "before_commit"
authors = [
    {name = "Anthony Sottile", email = "asottile@umich.edu"},
    {name = "Luís Ferreira", email = "contact@lsferreira.net"},
]
maintainers = [
    {name = "Luís Ferreira", email = "contact@lsferreira.net"},
]
dynamic = ["version", "description"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
readme = "README.md"
requires-python = ">=3.7"
dependencies = [
    "identify>=1.0.0",
    "nodeenv>=0.11.1",
    "pyyaml>=5.1",
    "toml",
    "virtualenv>=20.0.8",
    "importlib-metadata;python_version<'3.8'",
]
license = { file="LICENSE" }

[project.optional-dependencies]
dev = [
    "distlib",
]
test = [
    "covdefaults>=2.2",
    "coverage",
    "pytest",
    "pytest-env",
    "re-assert",
    "pytest >=2.7.3",
    "pytest-cov",
]
doc = ["sphinx"]

[project.urls]
Home = "https://before-commit.github.io/"
Source = "https://github.com/before-commit/before-commit"

[project.scripts]
before-commit = "before_commit.main:main"
pre-commit = "before_commit.main:main"
before-commit-validate-config = "before_commit.clientlib:validate_config_main"
pre-commit-validate-config = "before_commit.clientlib:validate_config_main"
before-commit-validate-manifest = "before_commit.clientlib:validate_manifest_main"
pre-commit-validate-manifest = "before_commit.clientlib:validate_manifest_main"

[tool.flit.sdist]
exclude = [
    "tests/",
    "testing/"
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "testing.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
plugins = [
    "covdefaults",
]
omit = [
    "before_commit/resources/*",
]
